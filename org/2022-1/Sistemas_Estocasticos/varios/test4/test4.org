#+TITLE: Sistemas Estocásticos
#+SUBTITLE: Test4
#+INCLUDE: "~/org/config/config-spanish.org"
#+INCLUDE: "~/org/config/config.org"
#+DATE: Junio 2022
#+AUTHOR: Tomás Muñoz
#+AUTHOR: \\
#+AUTHOR: Manuel Fuica Morales

* PROBLEMA N°1 :noexport:
** Enunciado

Suponga que a un restaurant de comida rápida
llegan 100 clientes por hora, la capacidad
de atención es en promedio 150 clientes por hora.
Si se sabe que cada cliente en promedio
espera 2 minutos en cola.

Calcule las medidas de desempeño del sistema:

1. ¿Cuál es la probabilidad que el sistema este vacío?
2. ¿Cuál es la probabilidad que un cliente llegue
   y que tenga que esperar porque el sistema
   está ocupado?
3. ¿Cuál es el N° promedio de Clientes en Cola?
4. ¿Cuál es la probabilidad que hallan 10 clientes en la cola?

** Desarrollo

* PROBLEMA N°2
** Enunciado

En un servidor de la universidad se mandan
programas de ordenador para ser ejecutados.
Los programas llegan al servidor con una
tasa de 10 por minuto. El tiempo medio
de ejecución de cada programa ´ es de
5 segundos y tanto los tiempos entre
llegadas como los tiempos de ejecución
se distribuyen exponencialmente.

a) ¿Qué proporción de tiempo está el
   servidor desocupado?
b) ¿Cuál es el tiempo esperado total de
   salida de un programa?
c) ¿Cuál es el número medio de programas
   esperando en la cola del sistema?

** Desarrollo

En este contexto contamos con un solo servidor
y considerando las capacidades de los sistemas
informáticos, se puede considerar la
capacidad de la cola como infinita. Por lo
tanto este sistema se puede acomodar a
un modelo de colas M/M/1.
- Entrada y salida como proceso de Poisson.
- Un solo servidor.
- Cola infinita.


Desde este fundamento, realizamos los cálculos:
** a

#+begin_quote
a) ¿Qué proporción de tiempo está el
   servidor desocupado?
#+end_quote

De la materia vista en clases, la probabilidad
de encontrar 0 clientes en el sistema para un
modelo M/M/1 se calcula con:

\begin{align*}
  P_0=1-\frac{\lambda}{\mu}
\end{align*}

Contamos con los datos de entrada al
sistema \lambda=10 \(\frac{programa}{minuto}\)
y tiempo promedio de ejecución
\(\frac{1}{\mu}\) = 5 \(\frac{segundo}{programa}\).

\begin{align*}
  \frac{1}{\mu}=
  5\ \frac{segundo}{programa}
  \rightarrow
  =
  5\ \frac{1}{60}
  \frac{minuto}{\cancel{segundo}}
  \frac{\cancel{segundo}}{programa}
  \rightarrow
  12\ \frac{programa}{minuto}
\end{align*}

Por lo tanto nuestra tasa de servicio \mu
es 12 \(\frac{programa}{segundo}\).

De esta forma, la probabilidad de encontrar en
cualquier momento el sistema desocupado es:

#+name: idle_time_percentage
#+begin_src R :session :exports both :results value
input<-10
service_rate<-12
round(1-(input/service_rate),5)
#+end_src

#+RESULTS: idle_time_percentage
: 0.16667

#+name: hours
#+begin_src python :exports none :results output
hours=10
print(hours)
#+end_src

#+RESULTS: hours
: 10

Por lo tanto, se espera que de cada
call_hours() {{{results(=10=)}}}
horas que el servidor está funcionando:

#+name: idle_time_in_minutes
#+begin_src python :session :exports none :var percentage=idle_time_percentage :var hours=hours :results replace output
print(int(hours)*percentage*60)
#+end_src

#+RESULTS: idle_time_in_minutes
: 100.00200000000001

#+begin_src python :exports results :session :var input=idle_time_in_minutes :results output
time = int(float(input))
import datetime
print(datetime.timedelta(minutes=time))
#+end_src

#+RESULTS:
: 1:40:00

aproximadamente el servidor esté ocioso.

** b
:PROPERTIES:
:ID:       c50c5e40-be4a-4d05-83fb-874de1e06616
:END:

#+begin_quote
b) ¿Cuál es el tiempo esperado total de
   salida de un programa?
#+end_quote

Si consideramos el tiempo esperado total de salida
de un programa como el tiempo que le toma
esperar en la cola más el tiempo que le toma
ser procesado, entonces podemos calcular
dicho tiempo total como:

\begin{align*}
  W=\frac{1}{\mu - \lambda}
\end{align*}

#+name: total_time_percentage
#+begin_src R :session :exports :results silent
total_time=1/(service_rate-input)
#+end_src

#+RESULTS: total_time_percentage
: 0.5

#+name: total_time_in_seconds
#+begin_src python :session :results output :exports results :var total_time=total_time_percentage
print(float(total_time)*float(60))
#+end_src

#+RESULTS: total_time_in_seconds
: 30.0

Así, se espera que en promedio, cada programa
tome call_total_time_in_seconds() {{{results(=30.0=)}}}
segundos en ser procesado y ejecutado.

** c

#+begin_quote
c) ¿Cuál es el número medio de programas
   esperando en la cola del sistema?
#+end_quote

Por teoría sabemos que la cantidad
de labores promedio esperando a ser ejecutados
se calcula:

\begin{align*}
L_q=\frac{\lambda^2}{\mu (\mu - \lambda)}
\end{align*}

Luego:

#+name: labor_in_queue
#+begin_src R :session :exports both
labor_in_queue<-(input^2)/(service_rate*(service_rate-input))
#+end_src

#+RESULTS: labor_in_queue
: 4.16666666666667

#+name: labor_in_queue_approx
#+begin_src python :session :exports none :var input=labor_in_queue :results output
print(int(input))
#+end_src

#+RESULTS: labor_in_queue_approx
: 4

Por lo tanto, en un momento cualquiera
deberíamos esperar encontrarnos con
aproximadamente
call_labor_in_queue_approx() {{{results(=4=)}}}
programas en fila esperando a ser ejecutados.

* PROBLEMA N°3
** Enunciado

Una tienda de alimentación es atendida por
una persona. Aparentemente el patrón de
llegadas de clientes durante los sábados
se comporta siguiendo un proceso de Poisson
con una tasa de llegadas de 10 personas
por hora. A los clientes se les atiende
siguiendo un orden tipo FIFO y debido al
prestigio de la tienda, una vez que
llegan están dispuestos a esperar el
servicio. Se estima que el tiempo que
se tarda en atender a un cliente se
distribuye exponencialmente, con un
tiempo medio de 4 minutos. Determina:

a) La probabilidad de que haya línea de espera.
b) La longitud media de la línea de espera.
c) El tiempo medio que un cliente permanece en cola.

** Desarrollo

Nuevamente es un escenario de modelo M/M/1 dado
que:
- Entrada y salida de acuerdo a un proceso de Poisson.
- Existe un solo servidor.
- No se habla del límite de una cola; incluso,
  los clientes están dispuestos a hacer cola dada
  la calidad del servicio.


- Tasa de Entrada:

\begin{align*}
\lambda = 10 \frac{persona}{hora}
\end{align*}

- Tasa de Servicio:

\begin{align*}
\frac{1}{\mu} = 4 \frac{minuto}{persona}
\rightarrow
\mu = \frac{1}{4} \frac{persona}{\cancel{minuto}}
\frac{\cancel{minuto}}{hora}
\frac{60}{1}
= 15 \frac{persona}{hora}
\end{align*}

Teniendo estos datos podemos responder las
preguntas:

** a

#+begin_quote
a) La probabilidad de que haya línea de espera.
#+end_quote

Para que haya línea de espera, implica que hay
un cliente siendo atendido y por lo menos
otro haciendo la fila, por lo que la cantidad
de individuos en el sistema es por lo menos
2:

Ésta se calcula con:

\begin{align*}
\sum_{n=2}^{\infty}P_{n}= (1-\rho) \rho^{n}
=
\sum_{n=0}^{1}P_{n}= (1-\rho) \rho^{n}
\end{align*}

donde \(\rho=\frac{\lambda}{\mu}\) se conoce
como el "factor de utilización".

#+begin_src R :session :exports code
input<-10
service_rate<-15
usage_factor<-input/service_rate
#+end_src

#+RESULTS:
: 0.666666666666667

#+name: number_of_clients_in_system
#+begin_src R :session :exports none
number_of_clients_in_system<-2
#+end_src

#+RESULTS: number_of_clients_in_system
: 2

Necesitamos saber la probabilidad de tener 2 o
más clientes:

Por lo tanto calculamos la probabilidad acumulada
de tener 0 o 1 clientes y obtenemos el complemento:

#+name: probability_of_n_clients_in_system
#+begin_src R :session :exports both :var clients=number_of_clients_in_system
clients_adjusted<-clients-1
r<-usage_factor
1-sum(probability_of_n_clients_in_system<-(1-r)*(r^(0:clients_adjusted)))
#+end_src

#+RESULTS: probability_of_n_clients_in_system
: 0.444444444444444

#+name: probability_of_n_clients_in_system_approx
#+begin_src python :session :exports none :var input=probability_of_n_clients_in_system :results output silent
input_adjusted=input*100
print(round(input_adjusted, 2))
#+end_src

#+name: hours_of_work
#+begin_src python :session :exports none :results output silent
hours_of_work=8
print(hours_of_work)
#+end_src

#+name: hours_of_queue
#+begin_src python :session :exports none :results silent output :var input=probability_of_n_clients_in_system
hours_of_work_adjusted=hours_of_work*60
input_adjusted=input*hours_of_work_adjusted
time = int(float(input_adjusted))
print(datetime.timedelta(minutes=time))
#+end_src

Por lo tanto, la probabilidad de tener 2 o
más clientes, significando que hay fila,
es de aproximadamente un
call_probability_of_n_clients_in_system_approx() {{{results(=44.44=)}}} %,
por lo que de cada
call_hours_of_work() {{{results(=8=)}}}
horas de trabajo, aproximadamente
call_hours_of_queue() {{{results(=3:33:00=)}}}
habrá gente esperando a ser atendida.

** b

#+begin_quote
b) La longitud media de la línea de espera.
#+end_quote

Esto se calcula como:

\begin{align*}
L_q=\frac{\lambda^2}{\mu(\mu-\lambda)}
\end{align*}

Todos estos datos ya los conocemos por lo que:

#+name: mean_labors_in_queue
#+begin_src R :session :exports both
mean_labors_in_queue<-input^2 / (service_rate * (service_rate - input))
#+end_src

#+RESULTS: mean_labors_in_queue
: 1.33333333333333

#+name: mean_labors_in_queue_rounded
#+begin_src python :session :results output :var input=mean_labors_in_queue :exports none :results silent
print(int(float(input)))
#+end_src

Lo que significa que en promedio, la
fila tendrá
call_mean_labors_in_queue_rounded() {{{results(=1=)}}}
personas.

** c

#+begin_quote
c) El tiempo medio que un cliente permanece en cola.
#+end_quote

El tiempo medio de un cliente en fila se
calcula con:

\begin{align*}
W_q=\frac{\lambda}{\mu(\mu - \lambda)}
\end{align*}

Por lo que

#+name: mean_wait_in_queue
#+begin_src R :session :exports both :results silent
i<-input
s<-service_rate
mean_wait_in_queue<- i/(s *(s-i))
#+end_src

#+name: mean_wait_in_queue_approx
#+begin_src python :session :exports none :results silent output :var input=mean_wait_in_queue
time = float(input)
print(datetime.timedelta(hours=time))
#+end_src

Por lo que en promedio, cada persona deberá
esperar a ser atendida
call_mean_wait_in_queue_approx() {{{results(=0:08:00=)}}}
aproximadamente.

* PROBLEMA N°4
** Enunciado

Una entidad bancaria considera la
posibilidad de instalar una red de
cajeros en una de sus oficinas.
Dado que se desconoce la afluencia
de público que va a demandar dicho
servicio, coloca un único cajero durante
un mes. Diariamente se recogen datos sobre
los tiempos de llegadas de los clientes,
así como de los tiempos de servicio.
Suponiendo que la sucursal se encuentra
emplazada en un barrio donde no existe
otro servicio semejante, el cliente
que llega prefiere esperar a poder
utilizar el cajero, cuando este
esté ocupado.

Tras el oportuno análisis de los
datos recogidos, se estima que:

a) Las llegadas siguen un proceso de Poisson
b) La distribución del tiempo de servicio
   es exponencial
c) El tiempo medio transcurrido entre dos
   llegadas consecutivas es de 7.5 minutos
d) El tiempo medio de servicio es de 5
   minutos por cliente.

Calcula:

a) Tiempo medio de espera que debe sufrir
   cada cliente en cola.
b) Tamaño medio de la cola y probabilidad
   de que al acudir al cajero ya haya
   alguna persona en la cola.

** Desarrollo

- Entrada:
\begin{align*}
\frac{1}{\lambda}= 7.5\ \frac{minuto}{persona}
\rightarrow
\lambda=
\frac{1}{7.5} \frac{persona}{minuto}
\end{align*}

- Servicio:
\begin{align*}
\frac{1}{\mu}= 5\ \frac{minuto}{persona}
\rightarrow
\mu=
\frac{1}{5} \frac{persona}{minuto}
\end{align*}

#+name: init_4
#+begin_src R :session :exports both :results silent
input<-(1/7.5)
service_rate<-(1/5)
#+end_src

** a

#+begin_quote
1) Tiempo medio de espera que debe sufrir
   cada cliente en cola.
#+end_quote

De la misma forma que en ejercicios anteriores,
el tiempo de espera para un modelo M/M/1
se calcula de la forma:

\begin{align*}
W_q=\frac{\lambda}{\mu(\mu - \lambda)}
\end{align*}

#+name: mean_wait_in_queue_4
#+begin_src R :session :results silent :exports both
i<-input
s<-service_rate
mean_wait_in_queue<-i/(s *(s - i))
#+end_src

#+name: mean_wait_in_queue_approx_4
#+begin_src python :exports none :results silent output :var input=mean_wait_in_queue_4
time = float(input)
print(datetime.timedelta(minutes=time))
#+end_src

Por lo que en promedio, cada persona deberá
esperar a ser atendida
call_mean_wait_in_queue_approx_4()
aproximadamente.

** b

#+begin_quote
2) [@2] Tamaño medio de la cola y probabilidad
   de que al acudir al cajero ya haya
   alguna persona en la cola.
#+end_quote

En cuanto al tamaño medio:

- Esto se calcula de la forma:
\begin{align*}
L_q=\frac{\lambda^2}{\mu (\mu - \lambda)}
\end{align*}

Luego:

#+name: labor_in_queue_4
#+begin_src R :session :exports both
labor_in_queue<-(input^2)/(service_rate*(service_rate - input))
#+end_src

#+RESULTS: labor_in_queue_4
: 1.33333333333333

#+name: labor_in_queue_approx_4
#+begin_src python :session :exports none :var input=labor_in_queue_4 :results silent output
print(round(input))
#+end_src

Por lo tanto, en un momento cualquiera
deberíamos esperar encontrarnos con
aproximadamente
call_labor_in_queue_approx_4()
personas en fila esperando a ser atendidos.

-----

- En cuanto a la probabilidad que cuando llegue una
  persona, ya exista otra haciendo la fila:


Para que haya línea de espera, implica que hay
un cliente siendo atendido y por lo menos
otro haciendo la fila, por lo que la cantidad
de individuos en el sistema es por lo menos
2:

Ésta se calcula con:

\begin{align*}
\sum_{n=2}^{\infty}P_{n}= (1-\rho) \rho^{n}
=
\sum_{n=0}^{1}P_{n}= (1-\rho) \rho^{n}
\end{align*}

donde \(\rho=\frac{\lambda}{\mu}\) se conoce
como el "factor de utilización".

#+begin_src R :session :exports code :results silent
usage_factor<-input/service_rate
#+end_src

#+name: number_of_clients_in_system_4
#+begin_src R :session :exports none :results silent
number_of_clients_in_system<-2
#+end_src

Necesitamos saber la probabilidad de tener 2 o
más clientes:

Por lo tanto calculamos la probabilidad acumulada
de tener 0 o 1 clientes y obtenemos el complemento:

#+name: probability_of_n_clients_in_system_4
#+begin_src R :session :exports both :var clients=number_of_clients_in_system_4 :results value
clients_adjusted<-clients-1
r<-usage_factor
prob_cum_of_n_clients_in_system<-sum((1-r)*(r^(0:clients_adjusted)))
prob_cum<-prob_cum_of_n_clients_in_system
round((1-prob_cum),5)
#+end_src

#+RESULTS: probability_of_n_clients_in_system_4
: 0.44444

#+name: probability_of_n_clients_in_system_approx_4
#+begin_src python :session :exports none :var input=probability_of_n_clients_in_system_4 :results output silent
input_adjusted=input*100
print(round(input_adjusted, 2))
#+end_src

#+name: times_you_go_to_ATM_4
#+begin_src python :session :exports none :results output silent
times_you_go_to_ATM_4=5
print(times_you_go_to_ATM_4)
#+end_src

#+name: probability_of_n_clients_in_system_approx_no_decimals_4
#+begin_src python :session :exports none :var input=probability_of_n_clients_in_system_4 :results output silent
input_adjusted=input*int(times_you_go_to_ATM_4)
print(round(input_adjusted))
#+end_src

Por lo tanto, la probabilidad de que al
acudir en cualquier momento
al cajero nos encontremos con una fila
es de aproximadamente un
call_probability_of_n_clients_in_system_approx_4() %.

Por lo que de cada
call_times_you_go_to_ATM_4()
veces que visitamos el
cajero,
call_probability_of_n_clients_in_system_approx_no_decimals_4()
veces nos encontramos con una fila.

* PROBLEMA N°5
** Enunciado

Un avión tarda unos 4 minutos de media en
aterrizar a partir del momento en que
la torre de control le da la señal de
aterrizaje. Si las llegadas de los
aviones se producen por término medio,
a razón de 8 por hora y siguiendo
un proceso de Poisson, ¿cuánto va a
esperar el piloto dando vueltas al
aeropuerto antes de recibir la señal
de tierra?

** Desarrollo

Este escenario se acomoda a un modelo M/M/1 dado
que:

- La entrada y servicio ocurren según un
  proceso de Poisson.
- Hay solo una torre que va dando las ordenes
  de aterrizaje; por lo tanto cuenta como
  un solo servidor.
- No se indica que hayan otras opciones de
  aterrizaje para los aviones, por lo que
  se asume que los aviones simplemente
  tienen que esperar su turno sin más opción.


- Tasa de servicio: en este caso hace referencia
  al tiempo que toma en aterrizar a partir
  del momento en que la torre da la señal
  de aterrizaje.


\begin{align*}
\frac{1}{\mu}= 4\ \frac{minuto}{aterrizaje}
\rightarrow
\frac{1}{4}\frac{aterrizaje}{minuto}=\mu
\end{align*}

- Tasa de entrada:


\begin{align*}
\lambda=8\ \frac{aterrizaje}{\cancel{hora}}
\frac{\cancel{hora}}{minuto}
\frac{1}{60}
\rightarrow
\frac{8}{60}
\frac{aterrizaje}{minuto}=\lambda
\end{align*}


Declaramos las variables en el sistema:

#+name: init_5
#+begin_src R :session :exports code :results silent
service_rate<-(1/4)
input<-(8/60)
#+end_src

#+begin_quote
¿cuánto va a
esperar el piloto dando vueltas al
aeropuerto antes de recibir la señal
de tierra?
#+end_quote

El tiempo de espera promedio para
un modelo M/M/1 se calcula:

\begin{align*}
W_q=\frac{\lambda}{\mu(\mu - \lambda)}
\end{align*}

#+name: mean_wait_in_queue_5
#+begin_src R :session :results replace value :exports both
i<-input
s<-service_rate
mean_wait_in_queue_5<-i/(s *(s - i))
mean_wait_in_queue_5_rounded<-round(mean_wait_in_queue_5,5)
#+end_src

#+RESULTS: mean_wait_in_queue_5
: 4.57143

#+name: mean_wait_in_queue_approx_5
#+begin_src python :exports none :results silent output :var input=mean_wait_in_queue_5
time = round(float(input),1)
print(datetime.timedelta(minutes=time))
#+end_src

Por lo que en promedio, cada avión deberá
esperar aproximadamente
call_mean_wait_in_queue_approx_5()
antes de empezar el proceso de aterrizaje.

* PROBLEMA N°6 (M/M/C) :noexport:

Una compañía ferroviaria pinta sus
propios vagones, según se vayan
necesitando, en sus propios talleres
donde se pinta a mano de uno en uno
con una velocidad que se distribuye
según una exponencial de media un
cada 4 horas y un costo anual de
4 millones de euros. Se ha determinado
que los vagones pueden llegar según
un proceso de Poisson de media un
cada 5 horas. Además, el coste por
cada vagón que no está activo es de
500 euros la hora. Se plantean otras
dos posibilidades. Una es encargar
dicho trabajo a una empresa de pintura
que lo haría con aerosol con el
consiguiente ahorro de tiempo.
Sin embargo, el presupuesto para esta
segunda alternativa es de 10 millones
de euros anuales. En este caso,
el proceso se aproxima a uno de Poisson
con una tasa de uno cada 3 horas.
La otra opción es poner otro taller
exactamente igual al que hay
actualmente, con igual tasa de servicio
y coste anual que permita pintar
dos vagones a la vez.

En todos los casos el trabajo se
considera ininterrumpido, esto es,
se trabajan 24 × 365 = 8760 horas
anuales. ¿Cuál de los tres
procedimientos es preferible?

* PROBLEMA N°7 (M/M/C) :noexport:

Una empresa de reparación de ordenadores
recibe una media de 10 solicitudes de
reparación al día, que se distribuyen
según un proceso de Poisson. Se supone
que \mu es la velocidad de reparación de
la persona reparadora en ordenadores/día
y el tiempo de reparación es exponencial.
Cada unidad de velocidad de reparación
supone un coste de 100 euros por semana.
Además, se ha estimado que el costo de
tener ordenadores no reparados supone
200 euros por ordenador y semana,
siendo este costo proporcional al tiempo.
Suponiendo que una semana tiene
cinco días laborables, se pide:

a) Que determines la velocidad de reparación optima.
b) Que determines si sería más económico tener
   dos personas, cada una con la mitad de la
   velocidad determinada en el apartado anterior.

* PROBLEMA N°8 (duda) :noexport:

Una base de mantenimiento de aviones
dispone de recursos para revisar únicamente
un motor de avión a la vez. Por tanto,
para devolver los aviones lo antes posible,
la política que se sigue consiste en aplazar
la revisión de los 4 motores de cada avión.
En otras palabras, solamente se revisa un
motor del avión cada vez que un avión
llega a la base. Con esta política,
los aviones llegan según una distribución
de Poisson de tasa media uno al día.
El tiempo requerido para revisar un motor
(una vez que se empieza el trabajo) tiene
una distribución exponencial de media
1/2 día. Se ha hecho una propuesta para
cambiar la política de revisión de manera
que los 4 motores se revisen de forma
consecutiva cada vez que un avión llegue
a la base. A pesar de que ello supondría
cuadruplicar el tiempo esperado de servicio,
cada avión necesitaría ser revisado
únicamente con una frecuencia 4 veces
menor. Utilizar la teoría de colas
para comparar las 2 alternativas.

* PROBLEMA N°9 (M/M/1/K=60) :noexport:

** Enunciado

En el mostrador de facturación de una aerolínea
llega un promedio de 45 clientes por hora,
cuando su capacidad media es de 60 clientes
por hora. Si un cliente espera una media
de 3 minutos en la cola, se pide:

a) Tiempo medio que un cliente pasa en la facturación.
b) Número medio de clientes en la cola.
c) Número medio de clientes en el sistema en
   un momento dado.

** Desarrollo

En este caso nos encontramos con un escenario
del tipo M/M/1/K, pues:
- Tanto la entrada como el servicio son procesos
  de Poisson.
- El servidor sigue siendo 1.
- La capacidad máxima del sistema es 60.

** a

#+begin_quote
1) [@1] Tiempo medio que un cliente pasa en la facturación.
#+end_quote
- Esto se refiere al servicio.


* PROBLEMA N°10 (M/M/1/K) :noexport:

En un restaurante de carretera llega
una media de 90 personas a la hora,
cuando tiene disponibilidad de dar
servicio a 120 clientes a la hora.
Sabiendo que los clientes esperan
una media de 2 minutos en la cola,
se pide:

a) Probabilidad que el sistema se encuentre sin ocupar.
b) Probabilidad que un cliente tenga que esperar
   al encontrarse el sistema ocupado.
c) Número medio de clientes en la cola.
a) Probabilidad de que hay 4 clientes en la cola.

* PROBLEMA N°11 (duda) :noexport:

En un lavado a presión de coches la tasa
media de llegadas es de 12 coches por hora
y son atendidos a una tasa promedio de 15
coches por hora, con tiempos de
servicios exponenciales. Se pide:

a) Probabilidad de tener 0 clientes en el sistema.
b) Número promedio de clientes que entran en el
   sistema de lavado.
c) Número promedio de clientes en la cola.
d) Tiempo promedio que un cliente espera en la cola.
e) Probabilidad de tener una cola de más de 2 clientes.
f) Probabilidad de esperar más de 25 minutos en
   la cola y en el sistema de lavado.

* PROBLEMA N°12 (M/M/C=2) :noexport:

Un terminal de facturación dispone de dos
operarios que atienden a los clientes
que llegan según una distribución de
Poisson de media ochenta clientes por
hora, que esperan en una única cola
hasta que alguno de los operarios
esté libre. El tiempo requerido para
atender a un cliente se distribuye
exponencialmente con medía 1,2 minutos. Se pide:

a) ¿Cuál es el número esperado de clientes
   en el terminal de facturación?
b) ¿Cuál es el tiempo medio que un cliente
   pasa en el terminal de facturación?
c) ¿Qué porcentaje de tiempo está libre
   un determinado operario?

* PROBLEMA N°13 (M/M/C=3) :noexport:

En un ambulatorio con tres médicos,
los pacientes llegan de forma aleatoria
(tiempos de llegada exponenciales) a razón
de 12 por hora. Estos son atendidos en
orden de llegada por el primer médico
que esté libre. Cada médico tarda una
media de 13 minutos en atender a cada
paciente (tiempos de atención exponenciales).
Se pide:

1. Calcular la proporción de tiempo que está
   cada médico atendiendo a pacientes.
2. Calcular el número promedio de pacientes
   que están en la sala de espera. 
3. Calcular el tiempo promedio total de
   espera de un paciente.
4. ¿Qué ocurriría en el ambulatorio si uno de
   los tres médicos se ausenta?

* PROBLEMA N°14 (M/M/1/K=4) :noexport:

En un taller mecánico llegan vehículos
para una puesta a punto antes de pasar
la FRONTERA S.A, las llegadas siguen
un proceso de Poisson de promedio 18
vehículos/hora. Las dimensiones del
taller sólo permiten que haya 4 vehículos,
y las ordenanzas municipales no permiten
esperar en la vía pública. El taller
despacha un promedio de 6 vehículos/hora
de acuerdo con una distribución
exponencial. Se pide:

a) ¿Cuál es la probabilidad de que no haya
   ningún vehículo en el taller?
b) ¿Cuál es el promedio de vehículos en el taller?
a) ¿Cuánto tiempo pasa por término medio
   un vehículo en el taller?
b) ¿Cuánto tiempo esperan por término medio
   los vehículos en la cola?
e) ¿Cuál es la longitud media de la cola?

* PROBLEMA N°15 (M/M/C=2/K=6) :noexport:

Un grupo de investigadores, formado por
seis personas, dispone de dos terminales
para Realizar cálculos. El trabajo
promedio de cálculo requiere de 20
minutos de tiempo de terminal, y el
tiempo promedio entre solicitudes de
servicio es de 30 minutos. Se supone
que estas solicitudes están distribuidas
exponencialmente. Se desea saber:

a) Número estimado de investigadores que
   esperan utilizar una terminal.
b) Tiempo total perdido diariamente si se
   considera una jornada de 8 horas.
c) Medidas de rendimiento.

* PROBLEMA N°16 (M/M/C=3(serie)/K=15) :noexport:

Una empresa de FRONTERA S.A. en una
localidad dispone de una superficie
que consta de tres partes: Una caseta
donde los clientes entregan la documentación
del vehículo y realizan el pago de tasas,
con un espacio físico para un máximo de
quince vehículos. Una nave formada por
dos circuitos (equipamiento y personal
técnico) para revisar los vehículos,
con una tasa de servicio medio de 45
clientes /hora. Una oficina con dos
puestos donde los conductores recogen
la documentación y la ficha de la
inspección técnica. Acude a la nave
una media de 57 clientes/hora, un mayor
número de vehículos colapsaría el
trabajo de la caseta, cuyo empleado
atiende a un ritmo medio de 1
cliente/minuto; mientras que un oficinista
tarda una media de 2 minutos/cliente.
Las llegadas siguen una Poisson y el
tiempo de servicio exponencialmente.

Se pide:

a) Longitud media de la cola de vehículos
   que habiendo pagado las tasas se
   encuentran esperando a la entrada de la nave.
b) Tiempo medio que un cliente pasa en la oficina.
c) Tiempo medio que un cliente se encuentra
   en la FRONTERA S.A
d) Para agilizar el proceso la empresa estudia
   la posibilidad de ampliar el número de
   servidores en la caseta o en la oficina.
   Suponiendo que el coste de ampliación en uno
   u otro lugar fuera equivalente,
   ¿qué criterio sería más acertado para
   que el tiempo de servicio del
   sistema fuera menor?

* Problema N°17 (M/M/C=?/K=?) :noexport:

A los choferes que se integran a radio
taxis la Frontera CO. nuevos se les
pide pasar una prueba escrita,
antes de hacer las pruebas de manejo.
Los exámenes escritos suelen hacerse
en el departamento de policía de la
ciudad. Los registros indican que la
cantidad promedio de pruebas es de
100 por día de 8 horas. El tiempo
necesario para contestar el examen
es de 30 minutos, más o menos.
Sin embargo, la llegada real de los
aspirantes y el tiempo que tarda
cada uno en contestar son totalmente
aleatorios. Determine lo siguiente:

a) La cantidad promedio de asientos que
   debe tener el departamento de policía
   en el salón de exámenes.
b) La probabilidad de que los aspirantes
   rebasen la cantidad promedio de asientos
   que hay en el salón de exámenes.
c) La probabilidad de que en un día no se
   haga examen alguno.

* Problema N°18 (M/M/C=5/K=5) :noexport:

Un programador atiende a 5 máquinas
automáticas. Cuando una máquina
termina un lote, el programador la debe
restablecer para iniciar el siguiente lote.
El tiempo para terminar un procesamiento
de lote es exponencial, con 45 minutos
de promedio. El tiempo de preparación
de la máquina también es exponencial
con un promedio de 8 minutos.

a) Calcule la cantidad promedio de máquinas
   que esperan su restablecimiento,
   o que están siendo restablecidas.
a) Calcule la probabilidad de que todas las
   máquinas estén trabajando.
b) Determine el tiempo promedio que una
   máquina está sin trabajar.

* Local variables :noexport:
# Local Variables:
# ispell-local-dictionary: "espanol"
# End:
