#+TITLE: Sistemas Estocásticos
#+SUBTITLE: Test4
#+INCLUDE: "~/org/config/config-spanish.org"
#+INCLUDE: "~/org/config/config.org"
#+DATE: Junio 2022
#+AUTHOR: [[mailto:t.munoz06@ufromail.cl][Tomás Muñoz]]
#+AUTHOR: \\
#+INCLUDE: "~/org/config/author-mfuica01.org"
#+AUTHOR: \\
#+AUTHOR: [[mailto:ricardo.sepulveda@ufrontera.cl][Profesor: Ricardo Sepúlveda]]
#+LATEX_HEADER: \usepackage{eurosym}
:R:
#+PROPERTY: header-args:R :session code :exports both :results output
:END:

@@latex:\clearpage@@

* TOC :TOC_2:noexport:
- [[#ejercicios][Ejercicios]]
  - [[#problema-n2][PROBLEMA N°2]]
  - [[#problema-n3][PROBLEMA N°3]]
  - [[#problema-n4][PROBLEMA N°4]]
  - [[#problema-n5][PROBLEMA N°5]]
  - [[#problema-n14][PROBLEMA N°14]]
  - [[#problema-n15][PROBLEMA N°15]]
  - [[#problema-n16][PROBLEMA N°16]]
  - [[#problema-n17][Problema N°17]]
  - [[#problema-n18][Problema N°18]]
- [[#fuentes-y-herramientas-utilizadas-para-el-desarrollo-de-este-documento][Fuentes y Herramientas utilizadas para el desarrollo de este documento]]
- [[#footnotes][Footnotes]]

* Ejercicios

Importamos la librería =queueing= de =R=
que nos asistirá en el cálculo de parámetros.

#+begin_src R :session code :exports code :results silent
library(queueing)
#+end_src

** PROBLEMA N°2
*** Enunciado

En un servidor de la universidad se mandan
programas de ordenador para ser ejecutados.
Los programas llegan al servidor con una
tasa de 10 por minuto. El tiempo medio
de ejecución de cada programa es de
5 segundos y tanto los tiempos entre
llegadas como los tiempos de ejecución
se distribuyen exponencialmente.

a) ¿Qué proporción de tiempo está el
   servidor desocupado?
b) ¿Cuál es el tiempo esperado total de
   salida de un programa?
c) ¿Cuál es el número medio de programas
   esperando en la cola del sistema?

*** Contexto

En este contexto contamos con un solo servidor
y considerando las capacidades de los sistemas
informáticos, se puede considerar la
capacidad de la cola como infinita. Por lo
tanto este sistema se puede acomodar a
un modelo de colas M/M/1.
- Entrada y salida como proceso de Poisson.
- Un solo servidor.
- Cola infinita.


Desde este fundamento, contamos con los datos
de llegada (y entrada) al sistema
\lambda=10 \(\frac{programa}{minuto}\)
y tiempo promedio de ejecución
\(\frac{1}{\mu}\) = 5 \(\frac{segundo}{programa}\).

\begin{align*}
  \frac{1}{\mu}=
  5\ \frac{segundo}{programa}
  \rightarrow
  =
  5\ \frac{1}{60}
  \frac{minuto}{\cancel{segundo}}
  \frac{\cancel{segundo}}{programa}
  \rightarrow
  12\ \frac{programa}{minuto}
\end{align*}

Por lo tanto nuestra tasa de servicio \mu
es 12 \(\frac{programa}{segundo}\).

Los parámetros de entrada se definen en
la primera línea, se resuelve el modelo
en la segunda línea, y la tercera
linea nos entrega un resumen del
modelo resuelto con los parámetros
dados en la primera línea.

#+begin_src R :session code :results output
mm1_2 <- NewInput.MM1(lambda=(10),mu=(12))
y_2 <- QueueingModel(mm1_2)
summary(y_2)
#+end_src

#+RESULTS:
:   lambda mu c  k  m        RO        P0       Lq        Wq  X L   W Wqq Lqq
: 1     10 12 1 NA NA 0.8333333 0.1666667 4.166667 0.4166667 10 5 0.5 0.5   6

*** a

#+begin_quote
a) ¿Qué proporción de tiempo está el
   servidor desocupado?
#+end_quote

Eso se puede calcular como el
complemento de la probabilidad de
que el servidor esté ocupado:

#+begin_src R :session code
1 - y_2$RO
#+end_src

#+RESULTS:
: 0.166666666666667

*** b

#+begin_quote
b) ¿Cuál es el tiempo esperado total de
   salida de un programa?
#+end_quote

#+begin_src R :session code
y_2$W
#+end_src

#+RESULTS:
: 0.5

*** c

#+begin_quote
c) ¿Cuál es el número medio de programas
   esperando en la cola del sistema?
#+end_quote

#+begin_src R :session code
y_2$Lq
#+end_src

#+RESULTS:
: 4.16666666666667

** PROBLEMA N°3
*** Enunciado

Una tienda de alimentación es atendida por
una persona. Aparentemente el patrón de
llegadas de clientes durante los sábados
se comporta siguiendo un proceso de Poisson
con una tasa de llegadas de 10 personas
por hora. A los clientes se les atiende
siguiendo un orden tipo FIFO y debido al
prestigio de la tienda, una vez que
llegan están dispuestos a esperar el
servicio. Se estima que el tiempo que
se tarda en atender a un cliente se
distribuye exponencialmente, con un
tiempo medio de 4 minutos. Determina:

a) La probabilidad de que haya línea de espera.
b) La longitud media de la línea de espera.
c) El tiempo medio que un cliente permanece en cola.

*** Desarrollo

Nuevamente es un escenario de modelo M/M/1 dado
que:
- Entrada y salida de acuerdo a un proceso de Poisson.
- Existe un solo servidor.
- No se habla del límite de una cola; incluso,
  los clientes están dispuestos a hacer cola dada
  la calidad del servicio.


- Tasa de Entrada:

\begin{align*}
\lambda = 10 \frac{persona}{hora}
\end{align*}

- Tasa de Servicio:

\begin{align*}
\frac{1}{\mu} = 4 \frac{minuto}{persona}
\rightarrow
\mu = \frac{1}{4} \frac{persona}{\cancel{minuto}}
\frac{\cancel{minuto}}{hora}
\frac{60}{1}
= 15 \frac{persona}{hora}
\end{align*}

Teniendo estos datos podemos modelar
el escenario:

#+begin_src R :session code :results output
mm1_3 <- NewInput.MM1(lambda=10,mu=15)
y_3 <- QueueingModel(mm1_3)
summary(y_3)
#+end_src

#+RESULTS:
:   lambda mu c  k  m        RO        P0       Lq        Wq  X L   W Wqq Lqq
: 1     10 15 1 NA NA 0.6666667 0.3333333 1.333333 0.1333333 10 2 0.2 0.2   3

*** a
:PROPERTIES:
:ID:       02bb4cf7-f019-46f4-a4e2-8d71527122ad
:END:

#+begin_quote
1) [@1] La probabilidad de que haya línea de espera.
#+end_quote

Para que haya línea de espera, implica que hay
un cliente siendo atendido y por lo menos
otro haciendo la fila, por lo que la cantidad
de individuos en el sistema es por lo menos
2:

Ésta se calcula con:

\begin{align*}
\sum_{n=2}^{\infty}P_{n}= (1-\rho) \rho^{n}
=
\sum_{n=0}^{1}P_{n}= (1-\rho) \rho^{n}
\end{align*}

Por lo tanto, calculamos la probabilidad
desde 0 hasta 1 clientes:

#+begin_src R :session code :results output replace
mm1_3 <- NewInput.MM1(lambda=10,mu=15,n=1)
y_3 <- QueueingModel(mm1_3)
Pn(y_3)
#+end_src

#+RESULTS:
: [1] 0.3333333 0.2222222

El programa nos entrega las probabilidades
para 0 y 1 clientes.

Luego, sumamos estas dos para obtener la acumulada:

#+begin_src R :session code :results value replace
p_acum_3<-sum(Pn(y_3))
#+end_src

#+RESULTS:
: 0.555555555555556

finalmente obtenemos el complemento:

#+name:3_a
#+begin_src R :session code
1-p_acum_3
#+end_src

#+RESULTS: 3_a
: 0.444444444444444

Así, la probabilidad de que el sistema
efectivamente perciba una fila es
call_3_a() {{{results(=0.444444444444444=)}}}.

*** b

#+begin_quote
2) [@2] La longitud media de la línea de espera.
#+end_quote

#+begin_src R :session code
y_3$Lq
#+end_src

#+RESULTS:
: 1.33333333333333

*** c

#+begin_quote
3) [@3] El tiempo medio que un cliente permanece en cola.
#+end_quote

#+begin_src R :session code
y_3$Wq
#+end_src

#+RESULTS:
: 0.133333333333333

** PROBLEMA N°4
*** Enunciado

Una entidad bancaria considera la
posibilidad de instalar una red de
cajeros en una de sus oficinas.
Dado que se desconoce la afluencia
de público que va a demandar dicho
servicio, coloca un único cajero durante
un mes. Diariamente se recogen datos sobre
los tiempos de llegadas de los clientes,
así como de los tiempos de servicio.
Suponiendo que la sucursal se encuentra
emplazada en un barrio donde no existe
otro servicio semejante, el cliente
que llega prefiere esperar a poder
utilizar el cajero, cuando este
esté ocupado.

Tras el oportuno análisis de los
datos recogidos, se estima que:

a) Las llegadas siguen un proceso de Poisson
b) La distribución del tiempo de servicio
   es exponencial
c) El tiempo medio transcurrido entre dos
   llegadas consecutivas es de 7.5 minutos
d) El tiempo medio de servicio es de 5
   minutos por cliente.

Calcula:

a) Tiempo medio de espera que debe sufrir
   cada cliente en cola.
b) Tamaño medio de la cola y probabilidad
   de que al acudir al cajero ya haya
   alguna persona en la cola.

*** Desarrollo

Esto corresponde a un modelo MM1 dado que:
- Entrada y servicio de acuerdo a un proceso
  Poisson.
- Un único cajero.
- No hay otros cajeros cerca por lo
  que la gente está obligada a hacer fila.


- Entrada:
\begin{align*}
\frac{1}{\lambda}= 7.5\ \frac{minuto}{persona}
\rightarrow
\lambda=
\frac{1}{7.5} \frac{persona}{minuto}
\end{align*}

- Servicio:
\begin{align*}
\frac{1}{\mu}= 5\ \frac{minuto}{persona}
\rightarrow
\mu=
\frac{1}{5} \frac{persona}{minuto}
\end{align*}

#+begin_src R :session code :results output
mm1_4 <- NewInput.MM1(lambda=(1/7.5),mu=(1/5))
y_4 <- QueueingModel(mm1_4)
summary(y_3)
#+end_src

#+RESULTS:
:   lambda mu c  k  m        RO        P0       Lq        Wq  X L   W Wqq Lqq
: 1     10 15 1 NA NA 0.6666667 0.3333333 1.333333 0.1333333 10 2 0.2 0.2   3

*** a

#+begin_quote
1) Tiempo medio de espera que debe sufrir
   cada cliente en cola.
#+end_quote

#+begin_src R :session code
y_4$Wq
#+end_src

#+RESULTS:
: 10

*** b

#+begin_quote
2) [@2] Tamaño medio de la cola y probabilidad
   de que al acudir al cajero ya haya
   alguna persona en la cola.
#+end_quote

- Tamaño medio:
  #+begin_src R :session code
  y_4$Lq
  #+end_src

  #+RESULTS:
  : 1.33333333333333

- Probabilidad de cola:
  1) La probabilidad de /no/ cola se calcula
     (mismo procedimiento que en [[id:02bb4cf7-f019-46f4-a4e2-8d71527122ad][ejercicio 3]]):
     #+begin_src R :session code
     c<-1
     r<-y_4$RO
     b_4<-sum(P1<-(1-r)*(r^(0:c)))
     #+end_src

     #+RESULTS:
     : 0.555555555555556

  2) y obtenemos el complemento:

     #+name:4_b
     #+begin_src R :session code
     1-b_4
     #+end_src

     #+RESULTS: 4_b
     : 0.444444444444444

     Así, la probabilidad de que el sistema
     efectivamente perciba una fila es
     call_4_b() {{{results(=0.444444444444444=)}}}.

** PROBLEMA N°5
*** Enunciado

Un avión tarda unos 4 minutos de media en
aterrizar a partir del momento en que
la torre de control le da la señal de
aterrizaje. Si las llegadas de los
aviones se producen por término medio,
a razón de 8 por hora y siguiendo
un proceso de Poisson, ¿cuánto va a
esperar el piloto dando vueltas al
aeropuerto antes de recibir la señal
de tierra?

*** Desarrollo

Este escenario se acomoda a un modelo M/M/1 dado
que:

- La entrada y servicio ocurren según un
  proceso de Poisson.
- Hay solo una torre que va dando las órdenes
  de aterrizaje; por lo tanto cuenta como
  un solo servidor.
- No se indica que hayan otras opciones de
  aterrizaje para los aviones, por lo que
  se asume que los aviones simplemente
  tienen que esperar su turno sin más opción.
- Tasa de servicio: en este caso hace referencia
  al tiempo que toma en aterrizar a partir
  del momento en que la torre da la señal
  de aterrizaje.


\begin{align*}
\frac{1}{\mu}= 4\ \frac{minuto}{aterrizaje}
\rightarrow
\frac{1}{4}\frac{aterrizaje}{minuto}=\mu
\end{align*}

- Tasa de entrada:


\begin{align*}
\lambda=8\ \frac{aterrizaje}{\cancel{hora}}
\frac{\cancel{hora}}{minuto}
\frac{1}{60}
\rightarrow
\frac{8}{60}
\frac{aterrizaje}{minuto}=\lambda
\end{align*}


Declaramos las variables en el sistema:
#+begin_src R :session code :results output
mm1_5 <- NewInput.MM1(lambda=(8/60),mu=(1/4))
y_5 <- QueueingModel(mm1_5)
summary(y_5)
#+end_src

#+RESULTS:
:      lambda   mu c  k  m        RO        P0        Lq       Wq         X
: 1 0.1333333 0.25 1 NA NA 0.5333333 0.4666667 0.6095238 4.571429 0.1333333
:          L        W      Wqq      Lqq
: 1 1.142857 8.571429 8.571429 2.142857

*** a

#+begin_quote
¿cuánto va a esperar el piloto dando vueltas al
aeropuerto antes de recibir la señal
de tierra?
#+end_quote

#+begin_src R :session code
y_5$Wq
#+end_src

#+RESULTS:
: 4.57142857142857

** PROBLEMA N°14
*** Enunciado

En un taller mecánico llegan vehículos
para una puesta a punto antes de pasar
la FRONTERA S.A, las llegadas siguen
un proceso de Poisson de promedio 18
vehículos/hora. Las dimensiones del
taller sólo permiten que haya 4 vehículos,
y las ordenanzas municipales no permiten
esperar en la vía pública. El taller
despacha un promedio de 6 vehículos/hora
de acuerdo con una distribución
exponencial. Se pide:

a) ¿Cuál es la probabilidad de que no haya
   ningún vehículo en el taller?
b) ¿Cuál es el promedio de vehículos en el taller?
c) ¿Cuánto tiempo pasa por término medio
   un vehículo en el taller?
d) ¿Cuánto tiempo esperan por término medio
   los vehículos en la cola?
e) ¿Cuál es la longitud media de la cola?

*** Desarrollo

Nos encontramos en un sistema del tipo M/M/1/K
dado que:
- Entrada y salida de acuerdo a un proceso
  de Poisson.
- Un solo servidor.
- Sistema con capacidad limitada.


- Llegada:
  \begin{align*}
  18 \frac{proceso}{hora}
  \end{align*}
- Servicio:
  \begin{align*}
  6 \frac{proceso}{hora}
  \end{align*}
- Capacidad
  \begin{equation*}
  K=4
  \end{equation*}

Declaramos las variables en el sistema:
#+begin_src R :session code :results output
mm1k_14 <- NewInput.MM1K(lambda=18,mu=6,k=4)
y_14 <- QueueingModel(mm1k_14)
summary(y_14)
#+end_src

#+RESULTS:
:   lambda mu c k  m        RO          P0       Lq    Wq        X        L
: 1     18  6 1 4 NA 0.9917355 0.008264463 2.528926 0.425 5.950413 3.520661
:           W       Wqq      Lqq
: 1 0.5916667 0.4358974 2.615385

*** a

#+begin_quote
1) [@1] ¿Cuál es la probabilidad de que no haya
   ningún vehículo en el taller?
#+end_quote

La probabilidad de que el servidor esté trabajando
es:
#+begin_src R :session code
y_14$RO
#+end_src

#+RESULTS:
: 0.991735537190083

Así, la probabilidad de que el servidor esté
ocioso, significando que el taller está sin
procesos pendientes es el complemento:

#+begin_src R :session code
1-y_14$RO
#+end_src

#+RESULTS:
: 0.00826446280991733

*** b

#+begin_quote
2) [@2] ¿Cuál es el promedio de vehículos en el taller?
#+end_quote

#+begin_src R :session code
y_14$L
#+end_src

#+RESULTS:
: 3.52066115702479

*** c

#+begin_quote
3) [@3] ¿Cuánto tiempo pasa por término medio
   un vehículo en el taller?
#+end_quote

#+begin_src R :session code
y_14$W
#+end_src

#+RESULTS:
: 0.591666666666667

*** d

#+begin_quote
4) [@4] ¿Cuánto tiempo esperan por término medio
   los vehículos en la cola?
#+end_quote

#+begin_src R :session code
y_14$Wq
#+end_src

#+RESULTS:
: 0.425

*** e

#+begin_quote
5) [@5] ¿Cuál es la longitud media de la cola?
#+end_quote

#+begin_src R :session code
y_14$Lq
#+end_src

#+RESULTS:
: 2.52892561983471

@@latex:\clearpage@@
** PROBLEMA N°15
*** Enunciado

Un grupo de investigadores, formado por
seis personas, dispone de dos terminales
para realizar cálculos. El trabajo
promedio de cálculo requiere de 20
minutos de tiempo de terminal, y el
tiempo promedio entre solicitudes de
servicio es de 30 minutos. Se supone
que estas solicitudes están distribuidas
exponencialmente. Se desea saber:

a) Número estimado de investigadores que
   esperan utilizar una terminal.
b) Tiempo total perdido diariamente si se
   considera una jornada de 8 horas.
c) Medidas de rendimiento.

*** Desarrollo

- Llegada y servicios a Poisson.
- 2 servidores.
- 6 investigadores.


#+begin_center
Esto se asemeja a un escenario del tipo
M/M/C=2/K=6.
#+end_center


- Llegada:
  \begin{align*}
  30 \frac{minuto}{proceso}
  \rightarrow
  \frac{1}{30}\frac{proceso}{minuto}
  \end{align*}
- Servicio:
  \begin{align*}
  20 \frac{minuto}{proceso}
  \rightarrow
  \frac{1}{20}\frac{proceso}{minuto}
  \end{align*}
- Servidores: 2.
- Capacidad: 6.

Declaramos las variables en el sistema:

#+begin_src R :session code :results output replace
mmck_15 <- NewInput.MMCK(lambda=(1/30),mu=(1/20),c=2,k=6)
y_15 <- QueueingModel(mmck_15)
summary(y_15)
## y_15
#+end_src

#+RESULTS:
: There were 19 warnings (use warnings() to see them)
:       lambda   mu c k  m        RO        P0         Lq       Wq          X
: 1 0.03333333 0.05 2 6 NA 0.3328758 0.5003432 0.07961565 2.391753 0.03328758
:           L        W  Wqq  Lqq
: 1 0.7453672 22.39175 14.5 1.45

#+begin_quote
Los mensajes /warning/ parecen ser un
desajuste entre versiones de =R=[fn:1], pero
no afectan el funcionamiento general de las
librerias ni afecta el flujo de trabajo
de este documento.
#+end_quote

*** a

#+begin_quote
1) [@1] Número estimado de investigadores que
   esperan utilizar una terminal.
#+end_quote

#+begin_src R :session code
y_15$Lq
#+end_src

#+RESULTS:
: 0.0796156485929993

*** b

#+begin_quote
2) [@2] Tiempo total perdido diariamente si se
   considera una jornada de 8 horas.
#+end_quote

Si consideramos tiempo perdido al tiempo en
que el computador está sin hacer
ningún cálculo:

#+begin_src R :session code
1-y_15$RO
#+end_src

#+RESULTS:
: 0.667124227865477

Ese es nuestro porcentaje.

*** c

#+begin_quote
3) [@3] Medidas de rendimiento.
#+end_quote


- L: numero medio de procesos en el sistema.
  #+begin_src R :session code :results value
  y_15$L
  #+end_src

  #+RESULTS:
  : 0.745367192862045

- Lq: numero medio de procesos en la cola.
  #+begin_src R :session code :results value
  y_15$Lq
  #+end_src

  #+RESULTS:
  : 0.0796156485929993

- W: tiempo medio de permanencia de un proceso
  en el sistema.
  #+begin_src R :session code :results value
  y_15$W
  #+end_src

  #+RESULTS:
  : 22.3917525773196

- Wq: tiempo medio de permanencia de un proceso
  en la cola.
  #+begin_src R :session code :results value
  y_15$Wq
  #+end_src

  #+RESULTS:
  : 2.39175257731959

** PROBLEMA N°16
*** Enunciado

Una empresa de FRONTERA S.A. en una
localidad dispone de una superficie
que consta de tres partes: Una caseta
donde los clientes entregan la documentación
del vehículo y realizan el pago de tasas,
con un espacio físico para un máximo de
quince vehículos. Una nave formada por
dos circuitos (equipamiento y personal
técnico) para revisar los vehículos,
con una tasa de servicio medio de 45
clientes /hora. Una oficina con dos
puestos donde los conductores recogen
la documentación y la ficha de la
inspección técnica. Acude a la nave
una media de 57 clientes/hora, un mayor
número de vehículos colapsaría el
trabajo de la caseta, cuyo empleado
atiende a un ritmo medio de 1
cliente/minuto; mientras que un oficinista
tarda una media de 2 minutos/cliente.
Las llegadas siguen una Poisson y el
tiempo de servicio exponencialmente.

Se pide:

a) Longitud media de la cola de vehículos
   que habiendo pagado las tasas se
   encuentran esperando a la entrada de la nave.
b) Tiempo medio que un cliente pasa en la oficina.
c) Tiempo medio que un cliente se encuentra
   en la FRONTERA S.A
d) Para agilizar el proceso la empresa estudia
   la posibilidad de ampliar el número de
   servidores en la caseta o en la oficina.
   Suponiendo que el coste de ampliación en uno
   u otro lugar fuera equivalente,
   ¿qué criterio sería más acertado para
   que el tiempo de servicio del
   sistema fuera menor?

*** Desarrollo

Contexto: Superficie de 3 partes:
1. Caseta de recepción de documentos y pago:
   - Capacidad de 15 vehículos.
   - Atiende a 1 cliente/minuto.
2. [@2] Nave de 2 circuitos para revisar vehículo:
   1. Equipamiento.
   2. Personal.


   - Recibe a 57 cliente/hora.
     - 57/60 cliente/minuto.
   - Atiende a 45 cliente/hora.
     - 45/60 cliente/minuto.
   - Caseta opera a un \(\rho\) máximo que
     limita superiormente a \(\rho_{\text{Nave}}\).


3. [@3] Oficina de entrega de documentos y vehículo.
   - Dos servidores.
   - Cada servidor atiende a 0.5 cliente/minuto.
   - Ergo, oficina atiende a 1 cliente/minuto.


Esto se puede modelar como un sistema
de 3 sub-sistemas diferentes; suponemos
que un cliente representa un vehículo:

| Caseta  |            |                        |
|         | Llegada    | ? cliente/minuto       |
|         | Servicio   | 1 cliente/minuto       |
|         | Capacidad  | 15 cliente             |
| Nave    |            |                        |
|         | Llegada    | (57/60) cliente/minuto |
|         | Servicio   | (45/60) cliente/minuto |
| Oficina |            |                        |
|         | Llegada    | ? cliente/minuto       |
|         | Servicio   | 0.5 cliente/minuto     |
|         | Servidores | 2                      |


Es prudente asumir que:
- Los vehículos se atienden por orden de llegada.
- A medida que los vehículos van saliendo de
  Nave, el subsistema Oficina percibe una llegada.
- La llegada que percibe el sistema Nave, es
  producto de la salida del sistema Caseta.

Por lo tanto nuestra tabla queda de la siguiente
forma:

| Caseta  |            |                        |
|         | Llegada    | ? cliente/minuto       |
|         | Servicio   | 1 cliente/minuto       |
|         | Capacidad  | 15 cliente             |
| Nave    |            |                        |
|         | Llegada    | (57/60) cliente/minuto |
|         | Servicio   | (45/60) cliente/minuto |
| Oficina |            |                        |
|         | Llegada    | (45/60) cliente/minuto |
|         | Servicio   | 0.5 cliente/minuto     |
|         | Servidores | 2                      |

De esta forma solo debemos calcular la llegada
de Caseta y podemos continuar con nuestros
cálculos.

Por enunciado sabemos que Caseta está
funcionando al máximo de su capacidad:

\begin{align*}
\rho_{\text{Nave}} &\leq \rho_{\text{Caseta}}
= \rho_{\text{max}}
\\
\frac{\lambda_{\text{Nave}}}{\mu_{\text{Nave}}}
&\leq
\frac{\lambda_{\text{Caseta}}}{\mu_{\text{Caseta}}} \\
\frac{(57/60)}{(45/60)} &\leq \frac{\lambda_{\text{Caseta}}}{1}
\rightarrow
\frac{57}{45}\frac{cliente}{minuto}
\leq \lambda_{\text{Caseta}}
\\
\end{align*}

Así:

| Caseta  |            |                        |
|         | Llegada    | 57/45 cliente/minuto   |
|         | Servicio   | 1 cliente/minuto       |
|         | Capacidad  | 15 cliente             |
| Nave    |            |                        |
|         | Llegada    | (57/60) cliente/minuto |
|         | Servicio   | (45/60) cliente/minuto |
| Oficina |            |                        |
|         | Llegada    | (45/60) cliente/minuto |
|         | Servicio   | 0.5 cliente/minuto     |
|         | Servidores | 2                      |

Ahora estamos en condiciones de
seguir de forma usual:

- Caseta:
#+begin_src R :session code :results output
mm1k_16_caseta <- NewInput.MM1K(lambda=(57/45),mu=1,k=15)
y_16_caseta <- QueueingModel(mm1k_16_caseta)
summary(y_16_caseta)
#+end_src

#+RESULTS:
:     lambda mu c  k  m        RO          P0       Lq       Wq         X
: 1 1.266667  1 1 15 NA 0.9937859 0.006214059 10.62906 10.69552 0.9937859
:          L        W      Wqq      Lqq
: 1 11.62284 11.69552 10.78091 10.78091

- Nave:
#+begin_src R :session code :results output
mm1k_16_nave <- NewInput.MM1K(lambda=(57/60),mu=(45/60),k=15)
y_16_nave <- QueueingModel(mm1k_16_nave)
summary(y_16_nave)
#+end_src

#+RESULTS:
:   lambda   mu c  k  m        RO          P0       Lq       Wq         X
: 1   0.95 0.75 1 15 NA 0.9937859 0.006214059 10.62906 14.26069 0.7453395
:          L        W      Wqq      Lqq
: 1 11.62284 15.59403 14.37455 10.78091

- Oficina:
#+begin_src R :session code :results output replace
mmc_16_oficina <- NewInput.MMC(lambda=(45/60),mu=0.5,c=2)
y_16_oficina <- QueueingModel(mmc_16_oficina)
summary(y_16_oficina)
#+end_src

#+RESULTS:
:   lambda  mu c  k  m   RO        P0       Lq       Wq    X        L        W
: 1   0.75 0.5 2 NA NA 0.75 0.1428571 1.928571 2.571429 0.75 3.428571 4.571429
:   Wqq Lqq
: 1   4   4

*** a

#+begin_quote
1) [@1] Longitud media de la cola de vehículos
   que habiendo pagado las tasas se
   encuentran esperando a la entrada de la nave.
#+end_quote

#+begin_src R :session code
y_16_nave$Lq
#+end_src

#+RESULTS:
: 10.6290576155833

*** b

#+begin_quote
2) [@2] Tiempo medio que un cliente pasa en la
   oficina.
#+end_quote

#+begin_src R :session code
y_16_oficina$W
#+end_src

#+RESULTS:
: 4.57142857142857

*** c

#+begin_quote
3) [@3] Tiempo medio que un cliente se encuentra
   en la FRONTERA S.A
#+end_quote

#+begin_src R :session code
current_system_wait<-sum(y_16_caseta$W,y_16_nave$W,y_16_oficina$W)
#+end_src

#+RESULTS:
: 31.8609757330531

*** d

#+begin_quote
4) [@4] Para agilizar el proceso la empresa estudia
   la posibilidad de ampliar el número de
   servidores en la caseta o en la oficina.
   Suponiendo que el coste de ampliación en uno
   u otro lugar fuera equivalente,
   ¿qué criterio sería más acertado para
   que el tiempo de servicio del
   sistema fuera menor?
#+end_quote

**** criterio 1
:PROPERTIES:
:ID:       b3878408-9e1b-49f0-83e6-282918f9cf4a
:END:

- Si aumentamos la cantidad de servidores en
  la caseta, la caseta pasa de ser
  un sistema M/M/C=1/K=15 a ser un sistema
  M/M/C=2/K=15:

#+begin_src R :session code :results output
mmck_16_caseta_2 <- NewInput.MMCK(lambda=(57/45),mu=1,c=2,k=15)
y_16_caseta_2 <- QueueingModel(mmck_16_caseta_2)
summary(y_16_caseta_2)
#+end_src

#+RESULTS:
: There were 11 warnings (use warnings() to see them)
:     lambda mu c  k  m        RO        P0        Lq       Wq        X        L
: 1 1.266667  1 2 15 NA 0.6330322 0.2246741 0.8361432 0.660427 1.266064 2.102208
:          W      Wqq      Lqq
: 1 1.660427 1.346446 2.692892

Por lo que el tiempo de espera del sistema sería
#+name: 16_option1
#+begin_src R :session code :results silent
option1<-sum(y_16_caseta_2$W, y_16_nave$W, y_16_oficina$W)
round(option1_percent<-((1-(option1/current_system_wait))*100),3)
#+end_src

aproximadamente un
call_16_option1() %
menor.


- Mientras que si aumentamos la cantidad
  de servidores en la oficina,
  la oficina pasa de ser
  un sistema M/M/C=2 a ser un sistema
  M/M/C=3:

#+begin_src R :session code :results output replace
mmc_16_oficina_2 <- NewInput.MMC(lambda=(45/60),mu=0.5,c=3)
y_16_oficina_2 <- QueueingModel(mmc_16_oficina_2)
summary(y_16_oficina_2)
#+end_src

#+RESULTS:
:   lambda  mu c  k  m  RO        P0        Lq        Wq    X        L        W
: 1   0.75 0.5 3 NA NA 0.5 0.2105263 0.2368421 0.3157895 0.75 1.736842 2.315789
:        Wqq Lqq
: 1 1.333333   2

por lo que el tiempo de espera total sería

#+name: 16_option2
#+begin_src R :session code :results silent
option2<-sum(y_16_caseta$W, y_16_nave$W, y_16_oficina_2$W)
round(option2_percent<-((1-(option2/current_system_wait))*100),3)
#+end_src

aproximadamente un
call_16_option2() %
menor.

Según este criterio, convendría aumentar la
cantidad de servidores en la caseta.

**** criterio 2

Si vemos el estado actual del sistema y
observamos los factores
de uso de cada estación:

#+begin_src R :session code :results value
print(paste(y_16_caseta$RO,y_16_nave$RO,y_16_oficina$RO))
#+end_src

#+RESULTS:
: 0.993785940728142 0.993785940728142 0.75

Observamos que la caseta está funcionando
al máximo, como se menciona en el enunciado;
esto provoca un cuello de botella en todo
el sistema que solo se arregla mejorando
la sección con el factor de uso mayor.

Mejorar la rapidez del sub-sistema Oficina
no mejoraría notoriamente la rapidez del
servicio general de forma notoria:
el cuello de botella se seguiría
manifestando en la caseta.

Como comprueba el cálculo del [[id:b3878408-9e1b-49f0-83e6-282918f9cf4a][criterio 1]],
sería más conveniente en primera instancia
aumentar la cantidad de servidores
de la caseta, así se descongestiona
el sistema entero, disminuyendo el
tiempo de espera total.

** Problema N°17
*** Enunciado

A los choferes que se integran a radio
taxis la Frontera CO. nuevos se les
pide pasar una prueba escrita,
antes de hacer las pruebas de manejo.
Los exámenes escritos suelen hacerse
en el departamento de policía de la
ciudad. Los registros indican que la
cantidad promedio de pruebas es de
100 por día de 8 horas. El tiempo
necesario para contestar el examen
es de 30 minutos, más o menos.
Sin embargo, la llegada real de los
aspirantes y el tiempo que tarda
cada uno en contestar son totalmente
aleatorios. Determine lo siguiente:

a) La cantidad promedio de asientos que
   debe tener el departamento de policía
   en el salón de exámenes.
b) La probabilidad de que los aspirantes
   rebasen la cantidad promedio de asientos
   que hay en el salón de exámenes.
c) La probabilidad de que en un día no se
   haga examen alguno.

*** Desarrollo

#+begin_quote
El tiempo
necesario para contestar el examen
es de 30 minutos, más o menos.
#+end_quote

Nuestra tabla luce de la siguiente forma:

| \lambda | Llegada                | ?         | prueba/hora |
| \mu     | Servicio cada servidor | \approx 2 | prueba/hora |
| C       | Servidores             | ?         | sillas      |

#+begin_quote
Los registros indican que la
cantidad promedio de pruebas es de
100 por día de 8 horas.
#+end_quote

Esto significa que en promedio, el sistema
percibe una tasa de salida de
\(100/8 = 12.5 \frac{prueba}{hora}\).

Por otro lado, si sabemos que cada servidor
atiende a una tasa \(\mu \frac{prueba}{hora}\),
y sabemos que el sistema tiene \(C\) servidores,
entonces podemos establecer la relación

\begin{align*}
  C \cdot \mu \frac{prueba}{hora} = X \frac{prueba}{hora}
\end{align*}

Donde X representa la cantidad de pruebas
completadas por hora que percibe el
sistema entero.

Pero de los párrafos previos sabemos que
\(X=12.5 \frac{prueba}{hora}\),
por lo tanto

\begin{align*}
  C \cdot 2 \frac{prueba}{hora} = 12.5 \frac{prueba}{hora}
  \rightarrow
  C = 6.25
\end{align*}

Siendo una variable discreta, el error
se puede explicar por el error en la medición
del tiempo de completitud de la prueba
de cada aspirante.

De ahora en adelante se consideraran 7
sillas en sala para compensar dicho error.

Ahora nuestra tabla luce así:

| \lambda | Llegada                | ?         | personas/hora |
| \mu     | Servicio cada servidor | \approx 2 | prueba/hora   |
| C       | Servidores             | 7         | sillas        |

Dado que el sistema percibe una salida de
12.5 pruebas por hora, y considerando
que el sistema está funcionando a un
factor de uso menor que 0, es necesario considerar
que la tasa de llegada al sistema debe
ser también 12.5, de otra forma el sistema
no alcanzaría las 100 pruebas cada 8 horas
registradas previamente o el sistema estaría
generando una cola que crece infinitamente.

Por lo tanto podemos modelar nuestro
sistema de la siguiente forma:

#+begin_src R :session code :results output
mmc_17 <- NewInput.MMC(12.5,2,7)
y_17 <- QueueingModel(mmc_17)
summary(y_17)
#+end_src

#+RESULTS:
:   lambda mu c  k  m        RO          P0       Lq        Wq    X        L
: 1   12.5  2 7 NA NA 0.8928571 0.001017113 5.847284 0.4677827 12.5 12.09728
:           W       Wqq      Lqq
: 1 0.9677827 0.6666667 9.333333

*** a

#+begin_quote
1) [@1] La cantidad promedio de asientos que
   debe tener el departamento de policía
   en el salón de exámenes.
#+end_quote

La cantidad promedio de asientos, calculada
previamente es de 6.25 asientos. Sin embargo
por los datos entregados en el enunciado
este número se debe aproximar a 7 en vez
de 6 pues de
otra forma implicaría que los que rinden
la prueba en realidad se demoran más
de 30 minutos y/o que los registros
en realidad no alcanzan las 100
pruebas por día.

*** b

#+begin_quote
2) [@2] La probabilidad de que los aspirantes
   rebasen la cantidad promedio de asientos
   que hay en el salón de exámenes.
#+end_quote

El promedio es 6.25, por lo que los aspirantes
deben ser 7 o mas, que es lo mismo que
el complemento de 0 hasta 6.

#+name: y_17_b
#+begin_src R :session code :results value
hasta_n_aspirantes<-6
mmc_17 <- NewInput.MMC(lambda=12.5,mu=2,c=7,n=hasta_n_aspirantes)
y_17 <- QueueingModel(mmc_17)
round((sum(Pn(y_17))*100),2)
#+end_src

#+RESULTS: y_17_b
: 29.83

Dicha probabilidad es aproximadamante un
call_y_17_b() {{{results(=[1] 29.83=)}}} %.

*** c

#+begin_quote
3) [@3] La probabilidad de que en un día no se
   haga examen alguno.
#+end_quote

La llegada es un proceso Poisson con
tasa 100 prueba/dia.

La variable aleatoria \(X\) representa
la probabilidad de que ocurran \(x=0\)
eventos en el periodo descrito por la tasa
\(\lambda=100 \frac{eventos}{\text{d\'ia}}\)

#+begin_src R :session code
dpois(x=0,lambda=100)
#+end_src

#+RESULTS:
: [1] 3.720076e-44

De forma predecible, la probabilidad de que
en un día no lleguen personas a tomar el examen
converge a cero.

\begin{align*}
  P(x=0) \to 0
\end{align*}

** Problema N°18
*** Enunciado

Un programador atiende a 5 máquinas
automáticas. Cuando una máquina
termina un lote, el programador la debe
restablecer para iniciar el siguiente lote.
El tiempo para terminar un procesamiento
de lote es exponencial, con 45 minutos
de promedio. El tiempo de preparación
de la máquina también es exponencial
con un promedio de 8 minutos.

a) Calcule la cantidad promedio de máquinas
   que esperan su restablecimiento,
   o que están siendo restablecidas.
b) Calcule la probabilidad de que todas las
   máquinas estén trabajando.
c) Determine el tiempo promedio que una
   máquina está sin trabajar.

*** Desarrollo
Contexto:
- 5 máquinas automáticas.
- 1 mantenedor de las máquinas.
- Cada maquina procesa con tiempo exponencial.
  - 45 minutos por lote.
- Tiempo de preparación exponencial.
  - 8 minutos por preparación.

Modelamiento:
- En este escenario el servidor es la persona
  que mantiene las máquinas.
- Los procesos entrantes son las maquinas cuando
  terminan su proceso.
- El servicio es aquel que presta el mantenedor
  a las máquinas.
- La cantidad de maquinas es la capacidad
  total del sistema.

De esta forma:
- Entrada
  \begin{align*}
  45 \frac{min}{lote} \rightarrow
  \frac{1}{45} \frac{proceso}{minuto}
  \end{align*}
- Servicio:
  \begin{align*}
  8 \frac{min}{prep} \rightarrow
  \frac{1}{8} \frac{proceso}{minuto}
  \end{align*}
- Servidor: \(c=1\)
- Capacidad del sistema: \(k=5\)

Variables iniciales:

#+begin_src R :session code :results output replace
mm1k_18 <- NewInput.MM1K(lambda=(1/45),mu=(1/8),k=5)
y_18 <- QueueingModel(mm1k_18)
summary(y_18)
#+end_src

#+RESULTS:
:       lambda    mu c k  m        RO        P0         Lq       Wq          X
: 1 0.02222222 0.125 1 5 NA 0.1777518 0.8222482 0.03827497 1.722625 0.02221898
:           L        W      Wqq      Lqq
: 1 0.2160268 9.722625 9.697734 1.212217

*** a

#+begin_quote
1) [@1] Calcule la cantidad promedio de máquinas
   que esperan su restablecimiento,
   o que están siendo restablecidas.
#+end_quote

Eso hace referencia al total de maquinas
en el sistema.

#+begin_src R :session code
y_18$L
#+end_src

#+RESULTS:
: 0.216026794485546

*** b

#+begin_quote
2) [@2] Calcule la probabilidad de que todas las
   máquinas estén trabajando.
#+end_quote

Eso se interpreta como la probabilidad de
que el mantenedor no esté manteniendo ninguna
máquina; por lo tanto =P0= o \(1-\rho\)
nos entrega esa probabilidad.

#+begin_src R :session code
1 - y_18$RO
#+end_src

#+RESULTS:
: 0.822248180014944

o utilizando =P0=:

#+begin_src R :session code :results value
Pn(y_18)[1]
#+end_src

#+RESULTS:
: 0.822248180014944

*** c

#+begin_quote
3) [@3] Determine el tiempo promedio que una
   máquina está sin trabajar.
#+end_quote

Cuando la máquina termina su proceso,
automáticamente ingresa en la cola de mantenimiento
del programador, por lo que el tiempo
promedio que una máquina está sin trabajar
es equivalente al tiempo promedio
de la cola del sistema.

#+begin_src R :session code
y_18$Wq
#+end_src

#+RESULTS:
: 1.72262537750476

* Fuentes y Herramientas utilizadas para el desarrollo de este documento

- Apuntes del profesor.
- Sistema operativo:
  - [[https://pop.system76.com/][Pop!\under{}OS by System76]]
    - basado en [[https://ubuntu.com/][Ubuntu]].
- Editor y ambiente de desarrollo:
  - [[https://github.com/doomemacs/doomemacs][GitHub - doomemacs/doomemacs: An Emacs framework for the stubborn martian hacker]]
    - [[https://orgmode.org/][Org mode for Emacs]]
    - Demo
      - [[https://www.youtube.com/watch?v=0g9BcZvQbXU][Consistent Technical Documents Using Emacs and Org Mode - YouTube]]
- Lenguaje para cálculo de parametros:
  - [[https://www.r-project.org/][R: The R Project for Statistical Computing]]
  - Librería:
    - [[https://journal.r-project.org/archive/2017/RJ-2017-051/RJ-2017-051.pdf][queueing: A Package For Analysis Of Queueing Networks and Models in R.pdf]]
    - [[https://cran.r-project.org/web/packages/queueing/queueing.pdf][Package ‘queueing’.pdf]]
- Calculador externo para redundancia:
  - [[https://github.com/AbdeltwabMF/queueing-modelsim][GitHub - AbdeltwabMF/queueing-modelsim: Queueing Models Simulator.]]
- Código fuente de este documento:
  - [[https://github.com/Ma-Nu-El/uni/blob/master/org/2022-1/Sistemas_Estocasticos/varios/test4/test4_version-2.org][uni/test4\under{}version-2.org at master · Ma-Nu-El/uni · GitHub]]

* Footnotes

[fn:1] [[https://github.com/rstudio/shiny/issues/1676][R 3.4.0 gives warning on all Shiny apps · Issue #1676 · rstudio/shiny · GitHub]]
# Local Variables:
# ispell-local-dictionary: "espanol"
# End:
