#+TITLE: Analisis de Comportamiento
#+OPTIONS: toc:2
#+LANGUAGE: es
#+LATEX_HEADER:\usepackage[spanish]{babel}

* 0: Importar datos sanos
- Buen formato.
* 1: DescriptY para descartar anomalías
- Análisis de valores atípicos.
* 2: Comparar con diferentes modelos

[[file:~/Downloads/uni/2022-1/proba/scripts-r/SCRIPT P02 Analisis de Distribucion.r]]


- Weibull
- Gamma
- Normal
- Lognormal
- Exponencial
- Pareto
- Uniforme
- Coachi
- etc


También puedes:

: hist(data2$`Tiempos de reparacion`)
: hist(data$variable)

* 3: Goodness of Statistics: Criterio Akaike
: ks.test(v_dependiente, modelo_de_comparacion,param1,param2)
* 4: Prueba de Hipótesis

: ks.test(data$variable,"distribution",parameters)
: ks.test(data$variable,"distribution",dist$variable)
: ks.test(d$v,"dist",dist$param[1],dist$param[2])


El número de parámetros depende de la función:

Considerando datos guardados en =data= con
variables guardadas en =data$var=, la funcion
=gamma= se guarda en funcion =fg=, que al
evaluarla guarda los parametros en
=fg$estimate[i]=, donde =i=:{1,2}.

- Ejemplo con distribucion gamma:
: ks.test(data$var,"pgamma",fg$estimate[1],fg$estimate[2])
- Ejemplo con distribucion exponencial:
: ks.test(data$var,"pexp",fe$estimate[1])
- Ejemplo con distribucion normal:
: ks.test(data$var,"pnorm",fn$estimate[1],fn$estimate[2])



* Script

#+begin_example R
# Pregunta 6

# Los que necesitan reemplazo varian entre 18 y 24
reemplazos_leq24<-data[data$`Tiempos de reparacion`<=24,]
reemplazos<-reemplazos_leq24[reemplazos_leq24$`Tiempos de reparacion`>=18,]

# output <- input[data$varibale<24 $ data$variable >=18,]

descripY(reemplazos,reemplazos$`Tiempos de reparacion`)

fw<-fitdist(reemplazos$`Tiempos de reparacion`, "weibull")
fg<-fitdist(reemplazos$`Tiempos de reparacion`, "gamma")
fln<-fitdist(reemplazos$`Tiempos de reparacion`, "lnorm")
fn<-fitdist(reemplazos$`Tiempos de reparacion`,"norm")
plot.legend<-c("Weibull","LogNormal","Gamma","Normal")
denscomp(list(fw,fln,fg,fn), legendtext=plot.legend)
qqcomp(list(fw,fln,fg,fn), legendtext=plot.legend)
cdfcomp(list(fw,fln,fg,fn), legendtext=plot.legend)
ppcomp(list(fw,fln,fg,fn), legendtext=plot.legend)

gofstat(list(fg,fn,fln,fw))

ks.test(reemplazos$`Tiempos de reparacion`,"pnorm",fn$estimate[1],fn$estimate[2])

1-pnorm(19,fn$estimate[1],fn$estimate[2])
#+end_example

* Local variables :noexport:
# Local Variables:
# ispell-local-dictionary: "espanol"
# End:

#  LocalWords:  relays ésimo ésima ésimas ésimos
